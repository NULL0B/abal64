#ifndef	_base64_h
#define	_base64_h

#ifndef	BB64C
#define	BB64C 100
#endif
#ifndef pMIME_ERR_BAD_BASE64
#define pMIME_ERR_BAD_BASE64		510	// bad Base 64
#endif
#ifndef	OK
#define	OK 0
#endif

unsigned char FromBase64[256] = {
	BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, //  0 -  7
	BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, //  8 - 15
	BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, // 16 - 23
	BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, // 24 - 31
	BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, // 32 - 39
	BB64C, BB64C, BB64C,    62, BB64C, BB64C, BB64C,    63, // 40 - 47
	   52,    53,    54,    55,    56,    57,    58,    59, // 48 - 55
	   60,    61, BB64C, BB64C, BB64C,     0, BB64C, BB64C, // 56 - 63
	BB64C,     0,     1,     2,     3,     4,     5,     6, // 64 - 71
	    7,     8,     9,    10,    11,    12,    13,    14, // 72 - 79
	   15,    16,    17,    18,    19,    20,    21,    22, // 80 - 87
	   23,    24,    25, BB64C, BB64C, BB64C, BB64C, BB64C, // 88 - 95
	BB64C,    26,    27,    28,    29,    30,    31,    32, // 96 -103
	   33,    34,    35,    36,    37,    38,    39,    40, //104 -111
	   41,    42,    43,    44,    45,    46,    47,    48, //112 -119
	   49,    50,    51, BB64C, BB64C, BB64C, BB64C, BB64C, //120 -127
	BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, //128 -135
	BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, //136 -143
	BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, //144 -151
	BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, //152 -159
	BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, //160 -167
	BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, //168 -175
	BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, //176 -183
	BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, //184 -191
	BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, //192 -199
	BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, //200 -207
	BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, //208 -215
	BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, //216 -223
	BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, //224 -231
	BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, //232 -239
	BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, //240 -247
	BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C, BB64C  //248 -255
	};

signed short int DecodeBase64(char FAR * sInput, char FAR * sOutput, signed short int FAR * piBytes);

#endif	// _base64_h

