<html><head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="generator" content="Prologue Sing Html Version 1.0a">
<meta name="version" content="*PRL@INFO*#11a040">
<link href="style.css" type="text/css" rel="stylesheet" media="screen">
<link href="style.css" type="text/css" rel="stylesheet" media="print">
<title>Sing Version 1.0a
</title>
</head><body>
<div align="center">
<table class="DOC">
<tr><th><h1 align="center">
Sing Version 1.0a
</h1>
<td><div align="center"><img src="logo.jpg">
</div></table></div><p>
<a name="vwidget.xml">

<p>
<div align="center">
<table class="DS">
<tr><th><h2 align="center">
accept widget properties
</h2>

<tr><td><p><tr><td>

<map name="Widget">
<area type=rect href="#Widget" coords="20,40,100,64">
<area type=rect href="#AtX" coords="130,80,186,96">
<area type=rect href="#Width" coords="390,80,446,96">
<area type=rect href="#TextFont" coords="130,110,260,129">
<area type=rect href="#TextColour" coords="130,140,226,156">
<area type=rect href="#Background" coords="390,140,486,156">
<area type=rect href="#PayLoad" coords="130,170,650,250">
<area type=rect href="#Identity" coords="130,260,626,276">
<area type=rect href="#Format" coords="130,320,650,400">
<area type=rect href="#WidgetClass" coords="130,290,258,309">
<area type=rect href="#Accept" coords="20,480,130,510">
<area type=rect href="#Full Screen" coords="330,480,442,512">
<area type=rect href="#Cancel" coords="580,480,690,510">
<area type=rect href="#Align" coords="390,110,520,129">
<area type=rect href="#Type" coords="430,290,646,309">
<area type=rect href="#$WidgetMessage(_Context->value_WidgetClass,1)" coords="540,80,652,96">
<area type=rect href="#$WidgetMessage(_Context->value_WidgetClass,2)" coords="540,110,652,126">
<area type=rect href="#$WidgetMessage(_Context->value_WidgetClass,3)" coords="540,140,656,156">
<area type=rect href="#Locked" coords="330,440,452,456">
<area type=rect href="#Interface Item" coords="480,440,643,456">
<area type=rect href="#Create" coords="100,40,177,64">
<area type=rect href="#Show" coords="177,40,248,64">
<area type=rect href="#GetFocus" coords="248,40,343,64">
<area type=rect href="#Event" coords="343,40,415,64">
<area type=rect href="#LoseFocus" coords="415,40,517,64">
<area type=rect href="#Hide" coords="517,40,580,64">
<area type=rect href="#Remove" coords="580,40,665,64">
</map>

<map name="OnCreate">
<area type=rect href="#Widget" coords="20,40,100,64">
<area type=rect href="#Accept" coords="20,480,130,510">
<area type=rect href="#Full Screen" coords="330,480,442,512">
<area type=rect href="#Cancel" coords="580,480,690,510">
<area type=rect href="#Create" coords="100,40,177,64">
<area type=rect href="#CreateOptions" coords="500,80,680,99">
<area type=rect href="#Create" coords="30,110,678,462">
<area type=rect href="#Show" coords="177,40,248,64">
<area type=rect href="#GetFocus" coords="248,40,343,64">
<area type=rect href="#Event" coords="343,40,415,64">
<area type=rect href="#LoseFocus" coords="415,40,517,64">
<area type=rect href="#Hide" coords="517,40,580,64">
<area type=rect href="#Remove" coords="580,40,665,64">
</map>

<map name="OnShowPage">
<area type=rect href="#Widget" coords="20,40,100,64">
<area type=rect href="#Accept" coords="20,480,130,510">
<area type=rect href="#Full Screen" coords="330,480,442,512">
<area type=rect href="#Cancel" coords="580,480,690,510">
<area type=rect href="#Create" coords="100,40,177,64">
<area type=rect href="#Show" coords="177,40,248,64">
<area type=rect href="#ShowOptions" coords="500,80,680,99">
<area type=rect href="#Show" coords="30,110,678,462">
<area type=rect href="#GetFocus" coords="248,40,343,64">
<area type=rect href="#Event" coords="343,40,415,64">
<area type=rect href="#LoseFocus" coords="415,40,517,64">
<area type=rect href="#Hide" coords="517,40,580,64">
<area type=rect href="#Remove" coords="580,40,665,64">
</map>

<map name="OnGetFocus">
<area type=rect href="#Widget" coords="20,40,100,64">
<area type=rect href="#Accept" coords="20,480,130,510">
<area type=rect href="#Full Screen" coords="330,480,442,512">
<area type=rect href="#Cancel" coords="580,480,690,510">
<area type=rect href="#Create" coords="100,40,177,64">
<area type=rect href="#Show" coords="177,40,248,64">
<area type=rect href="#GetFocus" coords="248,40,343,64">
<area type=rect href="#FocusOptions" coords="500,80,680,99">
<area type=rect href="#GetFocus" coords="30,110,678,462">
<area type=rect href="#Event" coords="343,40,415,64">
<area type=rect href="#LoseFocus" coords="415,40,517,64">
<area type=rect href="#Hide" coords="517,40,580,64">
<area type=rect href="#Remove" coords="580,40,665,64">
</map>

<map name="OnEvent">
<area type=rect href="#Widget" coords="20,40,100,64">
<area type=rect href="#Accept" coords="20,480,130,510">
<area type=rect href="#Full Screen" coords="330,480,442,512">
<area type=rect href="#Cancel" coords="580,480,690,510">
<area type=rect href="#Create" coords="100,40,177,64">
<area type=rect href="#Show" coords="177,40,248,64">
<area type=rect href="#GetFocus" coords="248,40,343,64">
<area type=rect href="#Event" coords="343,40,415,64">
<area type=rect href="#MimoMove" coords="230,80,270,96">
<area type=rect href="#MimoDown" coords="280,80,322,96">
<area type=rect href="#MimoUp" coords="330,80,354,96">
<area type=rect href="#MimoHold" coords="360,80,400,96">
<area type=rect href="#EventOptions" coords="500,80,680,99">
<area type=rect href="#Event" coords="30,110,678,462">
<area type=rect href="#LoseFocus" coords="415,40,517,64">
<area type=rect href="#Hide" coords="517,40,580,64">
<area type=rect href="#Remove" coords="580,40,665,64">
</map>

<map name="OnLoseFocus">
<area type=rect href="#Widget" coords="20,40,100,64">
<area type=rect href="#Accept" coords="20,480,130,510">
<area type=rect href="#Full Screen" coords="330,480,442,512">
<area type=rect href="#Cancel" coords="580,480,690,510">
<area type=rect href="#Create" coords="100,40,177,64">
<area type=rect href="#Show" coords="177,40,248,64">
<area type=rect href="#GetFocus" coords="248,40,343,64">
<area type=rect href="#Event" coords="343,40,415,64">
<area type=rect href="#LoseFocus" coords="415,40,517,64">
<area type=rect href="#LoseOptions" coords="500,80,680,99">
<area type=rect href="#LoseFocus" coords="30,110,678,462">
<area type=rect href="#Hide" coords="517,40,580,64">
<area type=rect href="#Remove" coords="580,40,665,64">
</map>

<map name="OnHidePage">
<area type=rect href="#Widget" coords="20,40,100,64">
<area type=rect href="#Accept" coords="20,480,130,510">
<area type=rect href="#Full Screen" coords="330,480,442,512">
<area type=rect href="#Cancel" coords="580,480,690,510">
<area type=rect href="#Create" coords="100,40,177,64">
<area type=rect href="#Show" coords="177,40,248,64">
<area type=rect href="#GetFocus" coords="248,40,343,64">
<area type=rect href="#Event" coords="343,40,415,64">
<area type=rect href="#LoseFocus" coords="415,40,517,64">
<area type=rect href="#Hide" coords="517,40,580,64">
<area type=rect href="#HideOptions" coords="500,80,680,99">
<area type=rect href="#Hide" coords="30,110,678,462">
<area type=rect href="#Remove" coords="580,40,665,64">
</map>

<map name="OnRemove">
<area type=rect href="#Widget" coords="20,40,100,64">
<area type=rect href="#Accept" coords="20,480,130,510">
<area type=rect href="#Full Screen" coords="330,480,442,512">
<area type=rect href="#Cancel" coords="580,480,690,510">
<area type=rect href="#Create" coords="100,40,177,64">
<area type=rect href="#Show" coords="177,40,248,64">
<area type=rect href="#GetFocus" coords="248,40,343,64">
<area type=rect href="#Event" coords="343,40,415,64">
<area type=rect href="#LoseFocus" coords="415,40,517,64">
<area type=rect href="#Hide" coords="517,40,580,64">
<area type=rect href="#Remove" coords="580,40,665,64">
<area type=rect href="#RemoveOptions" coords="500,80,680,99">
<area type=rect href="#Remove" coords="30,110,678,462">
</map>
This visual form allows inspection and modification 
of the properties and methods
of the component widgets of 
visual forms.
<BR>This is a generic collection of atributs
with varying 
semantics depending on the nature of the actual widget.
<BR>This visual
form will be activated in response to either
selecting the menu sequence <B>Edit..Properties</B>
or by 
pressing the <B>TAB</B> key in the visual forms editor.


<p>
<ol><li>
<dl>
<dt class=type><a name="Widget">
<b><u>W</u>idget
</b></a>
<dd class=data>This page presents the collection widget properties for 
inspection and eventual modification.


<p>

</dl>
<img src="vwidget1.gif" usemap="#Widget" >
<ul><li>
<dl>
<dt class=type><a name="AtX">
<b>AtX
</b></a>
<dd class=data>The <b>X</b> and <b>Y</b> position edit fields allow the graphical
pixel position
of the widget to be specified.
<br>The widget position may be changed in the visual
forms editor
by pressing the left button of the mouse over the widget and then
moving
with the button still pressed.
When the mouse button is released the position fileds
X and Y will
reflect the new current position.
<br>The widget position coordinate
values are available for use in
method text via the method terms :
<p><b>this.X</b>
<p>and
<p><b>this.Y</b>
<p>respectivly.


<p>

</dl>
<li>
<dl>
<dt class=type><a name="Width">
<b>Width
</b></a>
<dd class=data>The DIMENSION edit fields allow the widget size in pixels to be
modified and represent
the WIDTH and HEIGHT of the item.
<p>The dimensions may be modified from the visual
form editor
by pressing and holding the right button of the mouse and then
stretching
the widget to its required size. The dimension fields
W and H will adopt the new widget
dimensions when the right
button is released.
<p>The dimensions values are available
for use in method text 
through the following terms :
<p><b>this.W</b>
<p>and
<p><b>this.H</b>


<p>

</dl>
<li>
<dl>
<dt class=type><a name="TextFont">
<b>TextFont
</b></a>
<dd class=data>The TEXT FONT edit field allows the font used by the widget, when
displaying text,
to be selected. 
The initial value of this field will be taken from the current 
value
of the general parameter <b>Current Font</b> or the 
<b>Options.Parameters</b> menu.
<p>This
field is of conseqence to all widgets for which the 
payload represents a text to
be displayed.
<br>This field should reference a fixed font for <b>Edit</b>
widgets.
In other case proportional fonts are also possible.
<p>The numeric value of the field
may be referenced in method text
by the term :
<p><b>this.FONT</b>
<p>Information
relating to the font dimensions may be refered to
by the terms :
<p><b>this.FONTWIDTH</b>
: the widht of the font in pixels.
<p><b>this.FONTHEIGHT</b> : the height of the font
in pixels.



<p>

</dl>
<li>
<dl>
<dt class=type><a name="TextColour">
<b>TextColour
</b></a>
<dd class=data>This edit field allows value of the text colour to be specified.
The initial value
of this field is taken from the current default
foreground colour value as defined
by the palette control 
mechanisms of the forms editor context.
<br>The default value
may be changed by clicking with the left
button of the mouse on the desired colour.
<br>The
Tool Icons of all widget types which make use of the text
colour will be redisplayed
to reflect the text colour change.
<br>The value of this atribut may be referenced
in method text 
expressions by the term :
<p><b>this.FG</b>



<p>

</dl>
<li>
<dl>
<dt class=type><a name="Background">
<b>Background
</b></a>
<dd class=data>This edit field allows value of the background colour of the widget 
to be specified.
The
initial value of this field is taken from the current default
background colour value
as defined by the palette control 
mechanisms of the forms editor context.
<br>The
default value may be changed by clicking with the <b>right</b>
button of the mouse
on the desired colour in the palette window.
<br>The Tool Icons of all widget types
which make use of the background
colour will be redisplayed to reflect the colour
change.
<br>The value of this atribut may be referenced in method text 
expressions
by the term :
<p><b>this.BG</b>



<p>

</dl>
<li>
<dl>
<dt class=type><a name="PayLoad">
<b>PayLoad
</b></a>
<dd class=data>This edit field allows the payload of the widget to be specified.
<br>The semantics
of the payload depends on the actual widget class
as can be seen in the following
table.
<p><table>
<tr><th>Class<td>Description
<tr><td>WINDOW<td>the window title
<tr><td>TEXT<td>the
text of the message to display
<tr><td>CHECK<td>The label of the check box
<tr><td>RADIO<td>The
label of the radio button
<tr><td>BUTTON<td>The label of the push button
<tr><td>TABPAGE<td>The
label on the tab page button
<tr><td>SWITCH<td>The label in the switch button
<tr><td>SELECT<td>The
<b>|</b> separated list of option texts
to numerated  by the selection mechanism.
<tr><td>TABLE<td>The
<b>|</b> separated list of column titles
<tr><td>IMAGE<td>The filename of the image.
<tr><td>OTHER<td>No
semantics are defined for the payload of other
widget types.
</table>
<p>The value
of this atribut may be referenced from method text
by the term :
<p><b>this.PAYLOAD</b>


<p>

</dl>
<li>
<dl>
<dt class=type><a name="Identity">
<b>Identity
</b></a>
<dd class=data>This edit field allows an explicite name to give to identify 
and be able to access
the widget from method text of other widgets
and in forms model documentation.
<br>By
default widgets are atributed a unique auto generated name 
with the following basic
format
<p><b>auto1345</b>


<p>

</dl>
<li>
<dl>
<dt class=type><a name="Format">
<b>Format
</b></a>
<dd class=data>This edit field allows suplementary imformation to be provided 
for <B>EDIT</B> and
<B>FORM</B> to be used in conjunction with
 their pay load in defining their structure
display and usage.


<p>

</dl>
<li>
<dl>
<dt class=type><a name="WidgetClass">
<b>WidgetClass
</b></a>
<dd class=data>This combo selection field allows the nature or class of a widget 
to be changed.
The following provides an exhaustive list of all
widgets types :
<ol>
<li>fillzone
<li>outset
frame<li>inset frame<li>ridge frame<li>groove frame
<li>edit<li>text<li>image<li>line<li>push
button
<li>window<li>tab view
<li>check box<li>radio button
<li>combo select
<li>form
or table
<li>scroll bar or slider
<li>progress
<li>switch<li>graph
</ol>


<p>

</dl>
<li>
<dl>
<dt class=type><a name="Accept">
<b><u>A</u>ccept
</b></a>
<dd class=data>The ACCEPT button allows the modifications performed on the widget
   properties to
be kept and applied to the widget.

<p>

</dl>
<li>
<dl>
<dt class=type><a name="Full Screen">
<b><u>F</u>ull Screen
</b></a>
<dd class=data>By pressing this button the current widget method will be sent to the
full screen
text editor.


<p>

</dl>
<li>
<dl>
<dt class=type><a name="Cancel">
<b><u>C</u>ancel
</b></a>
<dd class=data>The CANCEL button allows modifications performed on the widget
   properties to be
abandoned.

<p>

</dl>
<li>
<dl>
<dt class=type><a name="Align">
<b>Align
</b></a>
<dd class=data>This combo selection field allows a value to be chosen 
from a,widget specific,list
of options.
<p>The semantics of the options vary depending on the 
actual class of
the widget as can be seen in the following table.
<p>
<table>
<tr><td>WIDGET<td>Behaviour

<tr><td>WINDOW<td>The
alignment value applies to the window itself
within the parent graphical output screen.

<tr><td>TEXT
<td><dl><dt>None<dd>no
alignment is applied and the text will be 
displayed with automatic line wrap within
the zone defined by the
position and dimension values. This alignment value is not

intended for use with proportional fonts.
<dt>Right,Left,Center<dd>These values will
cause the text to be 
displayed aligned in a single line centered in a vertical direction
within
the zone.
<dt>Justify<dd>The text will be space padded displayed such that 
it touches
both left and right edges of its zone</dl>
<tr><td>FRAMES<td>For the various frame
components, namely
<b>INSET</b>,<b>OUTSET</b>,<b>GROOVE</b> and<b>RIDGE</b>,
The alignment
value applies to the payload which , when provided, 
will be displayed as a textual
title for the frame. 
The alignment value of <b>none</b> inhibits title display.

<tr><td>IMAGE<td>The
following image options are available.
<dl><dt>None<dd>no alignment is applied to
the image.
<dt>Right<dd>The image will be right aligned in the widget zone.
<dt>Left<dd>The
image will be left aligned in the widget zone.
<dt>Center<dd>The image will be centered
within the widget zone.
<dt>Tile<dd>This option causes the images, smaller than their

widget zone, to be <b>tiled</b> or repeated, to fill the entire 
zone.
<dt>Makefit<dd>causes
images to be stretched or squashed to fit
the entire widget zone.
<dt>Bestfit<dd>causes
images to stretched and squashed respecting
the image proportions. The result may
stil be smaller than the 
widget zone in which case it will be centered.
</dl>
<tr><td>SCROLLBAR<td>This
option controls the composition of the
scroll bar. In all cases, when the zone width
is found to be
greater than the zone height a horizontal bar will be displayed.
Otherwise,
when the width is less than the height, a vertical bar
will be displayed.

<dl><dt>None<dd>The
scroll bar <i>trough</i> will occupy the entire
widget zone. No butons will be displayed.
<dt>Right<dd>A
<b>down</b> or <b>right</b> button will be displayed
at the appropriate extremity.
The scroll bar trough will occupy
the remaining zone.
<dt>Left<dd>A <b>up</b> or <b>left</b>
button will be displayed
at the appropriate extremity. The scroll bar trough will
occupy
the remaining zone.
<dt>Both<dd>Both <b>up</b> and <b>down</b> or <b>left</b>
and <b>right</b>
buttons will be displayed at each end of the bar.
The scroll bar
trough will occupy the remaining zone.
<dt>Slider<dd>No buttons will be displayed
and the slider bar will
be displayed as a rounded slider in a grooved trough, occupying
the
entire widget zone.
</dl>
<TR><TD>PUSHBUTTON<TD>This option controls the nature
of the
push button as follows.
<DL><DT>TEXT<DD>The payload of the widget will be displayed
as the
textual title of the button with an eventual underlined hotkey
trigger character.
<DT>IMAGE<DD>The
payload ofthe widget will be used as the filename
of an image to be displayed within
the surface of the push button.
</DL>
<tr><td>OTHER<td>No semantic is currently defined
for other widget types.
</table>



<p>

</dl>
<li>
<dl>
<dt class=type><a name="Type">
<b>Type
</b></a>
<dd class=data>This combo selection field allows the data or behavioural type 
associated with the
widgets as can be seen below
<p>
<table>
<tr><td>Edit<td>These widgets are normally
of type <b>String</b> 
and give rise to the declaration of a string buffer
storage
area in the object container.
<tr><td>Edit<td>Widgets of this class also declare <b>string</b>
storage
but in addition further declarations allow row and
column access to the various table
members or positions.
<tr><td>Check,Switch<td>These widgets are of type <b>word</b>
with 
a single integer declaration representing their state.
<tr><td>Radio<td>These
widgets are of type <b>word</b> with 
a single integer declaration shared between
all members of the radio
group identifying the active item of the radio group.
<tr><td>Button,TabView<td>
In
the case of these activator widgets the behavioural type 
<b>Overlay</b> implies that
the widget is to trigger the attachment 
of an ABAL <b>OVERLAY</b> program when activated.
<tr><td>Progress<td>These
widgets have two integer data items
the value and the limit.
<tr><td>Scroll<td>These
widgets have three integer data items
the value, the max and the limit.
</table>
<p>The
various data items may be referenced from method text
by the terms : 
<p><table>
<tr><td><b>this.BUFFER</b>
<td> returns the string buffer value
<tr><td><b>this.SIZE</b>   <td> returns the string
length
<tr><td><b>this.LINE(N)</b> <td> sets the table line to N
<tr><td><b>this.LINES</b>
<td> returns the total number of table lines
<tr><td><b>this.LINESIZE</b> <td> returns
the total size in characters
 of the table line
<tr><td><b>this.COLUMN(N)</b><td>
refers to the column N of the current LINE
<tr><td><b>this.COLUMNS</b> <td> returns
the total number of table columns
<tr><td><b>this.COLUMNSIZE</b> <td> returns the
total size in characters
 of the table column
<tr><td><b>this.VALUE</b> <td> returns
the numeric value
<tr><td><b>this.LIMIT</b> <td> returns the numeric value
<tr><td><b>this.MAX</b>
<td> returns the numeric value
</table>






<p>

</dl>
<li>
<dl>
<dt class=type><a name="$WidgetMessage(_Context->value_WidgetClass,1)">
<b>$WidgetMessage(_Context->value_WidgetClass,1)
</b></a>
<dd class=data>This check box controls widget dependant features.
<p>In most cases the check control
allows activation of the bold atribut for
the textual payload, in the form of a title
, label or other message.
<p>The following table describes the widgets which are an
exception to this
general rule.
<p>
<table>
<tr><th>Widget<th>Description
<tr><th>Button<th>For
Image buttons this check controls the <b>makefit</b> option
of the button image. When
set the image will be stretched or squashed to fit inside
the button area or frame.
Otherwise, when reset, the image will be aligned or clipped 
as required, retaining
its original size.
<tr><th>EDIT<td>This check activates enforcement of the format
supplied by the
format field of the these widgets.
<tr><th>FORM<td>As for edit widgets
this check activates enforcement of the format 
supplied by the format field of the
these widgets.
<tr><th>SCROLL<td>This check controls the focus <b>grip</b> atribut
of scrollbars
which will be visible when a scrollbar is selected by mouse activity
and will be
maintained during their operation up until the final mouse release.
<tr><th>IMAGE<td>This
check controls the <b>spriting</b> nature of its widget.
Image sprites will recognise
and apply their transparency allowing backgrounds
to shine through in appropriate
areas.
<tr><th>WINDOW<td>This check controls the presence of the <b>exit</b> button,

appearing at the top right hand corner of the widget, which when clicked will return
an
<b>escape</b> result.
</table>


  


<p>

</dl>
<li>
<dl>
<dt class=type><a name="$WidgetMessage(_Context->value_WidgetClass,2)">
<b>$WidgetMessage(_Context->value_WidgetClass,2)
</b></a>
<dd class=data>This check box controls widget dependant features.
<p>In most cases the check control
allows activation of the underline atribut for
the textual payload, in the form of
a title , label or other message.
<p>For the <b>EDIT</b> widget this check controls
may be used to indicate that 
the data input must be performed in secret mode, only
stars being displayed, the actual 
value being hidden. This may be used for pass word
entry or other fields where discretion is required.
<p>For the <b>WINDOW</b> widget
this check control allows a help button to be 
added to the window in the top right
corner.
<p>This help button gives direct access to the html document generated for
the 
parent forms component.


<p>

</dl>
<li>
<dl>
<dt class=type><a name="$WidgetMessage(_Context->value_WidgetClass,3)">
<b>$WidgetMessage(_Context->value_WidgetClass,3)
</b></a>
<dd class=data>This check box controls widget dependant features.
<p>In most cases the check control
allows activation of the shadow atribut for
the textual payload, in the form of a
title , label or other message.
<p>For the <b>FORM</b> widget this check controls
the title bar relief atribut,
which when set causes the titles zone to be displayed
in GUI RELIEF format
rather than in GUI TITLE COLOUR format.



<p>

</dl>
<li>
<dl>
<dt class=type><a name="Locked">
<b>L<u>o</u>cked
</b></a>
<dd class=data>This check box allows the collection of widget properties to be 
locked and consequently
protected against accidental modification.


<p>

</dl>
<li>
<dl>
<dt class=type><a name="Interface Item">
<b>Interface Item
</b></a>
<dd class=data>This check control when selected indicates that the initial value of the
storage associated
with the widget is to be received as a parameter in the
case of modular packaging.


<p>

</dl>
</ul><li>
<dl>
<dt class=type><a name="Create">
<b>C<u>r</u>eate
</b></a>
<dd class=data>This page presents the text and properties of the widget method
<b>OnCreate</b>. 
<p>This
method will be generated and activated, 
if text has been defined, 
directly after
the allocation and parameter transfer mechanisms
and provides for application specific
finalisation of the 
construction phase for the widget.
<p>


<p>

</dl>
<img src="vwidget2.gif" usemap="#OnCreate" >
<ul><li>
<dl>
<dt class=type><a name="CreateOptions">
<b>CreateOptions
</b></a>
<dd class=data>This combo selection field offers control in two areas : 
<ol>
<li>
<p>Method Instance
Type : <b>Function</b> or <b>Inline</b>
<p>Inline methods are generated to the source
region of their
activation whilst function methods allow event method invokation
from
within methods of other widgets. 
<li>
<p>Zone Definition Type : <b>Constant</b> or
<b>Variable</b>
<p>Position and Dimension information is normally generated 
as and
made available through constants to the various library 
function calls and widget
atributs (this.x,y,w,h). In certain
cases it may be desirable to be able to change
their positions
or dimensions during the operation of the visual form. In this 
case
the variable option should be activated. 
</ol>


<p>

</dl>
<li>
<dl>
<dt class=type><a name="Create">
<b>Create
</b></a>
<dd class=data>This field allows the method text of the construction method
to be edited using the
standard application text editor.


<p>

</dl>
</ul><li>
<dl>
<dt class=type><a name="Show">
<b><u>S</u>how
</b></a>
<dd class=data>This page presents the text and properties of the widget method
<b>OnShow</b>. 
<p>This
method will be generated and activated,
if text has been defined, 
from the forms
event method of the same name.                  
<p>Tab View widgets will control
the display of their sub components
<p>


<p>

</dl>
<img src="vwidget3.gif" usemap="#OnShowPage" >
<ul><li>
<dl>
<dt class=type><a name="ShowOptions">
<b>ShowOptions
</b></a>
<dd class=data>This combo selection field offers control in two areas : 
<ol>
<li>
<p>Method Instance
Type : <b>Function</b> or <b>Inline</b>
<p>Inline methods are generated to the source
region of their
activation whilst function methods allow event method invocation
from
within methods of other widgets. 
<li>
<p>Widget Display Scheduling : <b>Automatic</b>
: <b>Conditional</b>
<p>Widgets for which the display sheduling has been set to 
<b>automatic</b>
will be displayed during the parent form
event method of the same name.
<p>When sheduling
is set to conditional then display will be
inhibited and must be performed as required
during widget method
text or by other programming means.
<p>This feature when combined
with the variable dimensioning and
positioning available through the <b>Create</b>
method properties
allows the construction of versitile documnet generator type
programs.
</ol>


<p>

</dl>
<li>
<dl>
<dt class=type><a name="Show">
<b>Show
</b></a>
<dd class=data>This field allows the method text of the display method
to be edited using the standard
application text editor.


<p>

</dl>
</ul><li>
<dl>
<dt class=type><a name="GetFocus">
<b><u>G</u>etFocus
</b></a>
<dd class=data>This page presents the text and properties of the widget method
<b>OnGetFocus</b>.

<p>This method will be generated and activated,
if text has been defined, 
when the
widget receives the keyboard focus              
from the parent form focus control
mechanisms.
<p>


<p>

</dl>
<img src="vwidget4.gif" usemap="#OnGetFocus" >
<ul><li>
<dl>
<dt class=type><a name="FocusOptions">
<b>FocusOptions
</b></a>
<dd class=data>This combo selection field offers control in two areas : 
<ol>
<li>
<p>Method Instance
Type : <b>Function</b> or <b>Inline</b>
<p>Inline methods are generated to the source
region of their
activation whilst function methods allow event method invokation
from
within methods of other widgets. 
<li>
<p> Method Focus : <b>Active</b> or <b>Inactivae</b>
When
this option is set to active the widget will be included
in the focus control mechanisms
of its parent form.
Otherwise it will be excluded from receiving focus.
</ol>


<p>

</dl>
<li>
<dl>
<dt class=type><a name="GetFocus">
<b>GetFocus
</b></a>
<dd class=data>This field allows the method text of the focus reception method
to be edited using
the standard application text editor.


<p>

</dl>
</ul><li>
<dl>
<dt class=type><a name="Event">
<b><u>E</u>vent
</b></a>
<dd class=data>This page presents the text and properties of the widget method
<b>OnEvent</b>. 
<p>This
method will be generated and activated,
if text has been defined, 
from the forms
event method of the same name.                  
<p>These event methods are also suitable
for interwidget signal
mechanisms.
<p>For <b>Button</b> and <b>Tab View</b> Widgets
of (b>Overlay</b>
type , this method will encapculate the overlay attachment and
activation
mechanisms.
<p>


<p>

</dl>
<img src="vwidget5.gif" usemap="#OnEvent" >
<ul><li>
<dl>
<dt class=type><a name="MimoMove">
<b>MimoMove
</b></a>
<dd class=data>When this switch is selected the widget specific event method 
will be invoked upon
reception of <B>MOUSE MOVE</B> events.


<p>

</dl>
<li>
<dl>
<dt class=type><a name="MimoDown">
<b>MimoDown
</b></a>
<dd class=data>When this switch is selected the widget specific event method 
will be invoked upon
reception of <B>MOUSE DOWN</b> events.


<p>

</dl>
<li>
<dl>
<dt class=type><a name="MimoUp">
<b>MimoUp
</b></a>
<dd class=data>When this switch is selected the widget specific event method 
will be invoked upon
reception of <B>MOUSE UP</b> events.


<p>

</dl>
<li>
<dl>
<dt class=type><a name="MimoHold">
<b>MimoHold
</b></a>
<dd class=data>When this switch is selected the widget specific event method 
will be invoked upon
reception of <B>MOUSE IS DOWN</b> events.


<p>

</dl>
<li>
<dl>
<dt class=type><a name="EventOptions">
<b>EventOptions
</b></a>
<dd class=data>This combo selection field offers control in two areas : 
<ol>
<li>
<p>Method Instance
Type : <b>Function</b> or <b>Inline</b>
<p>Inline methods are generated to the source
region of their
activation whilst function methods allow event method invocation
from
within methods of other widgets. 
<li>
<p> Method Event Dispatch : <b>Active</b> or
<b>Inactive</b>
When this option is set to active the widget will be included
in the
event dispatching mechanisms of its parent form.
Otherwise it will be oblivious to
parent form events.
</ol>


<p>

</dl>
<li>
<dl>
<dt class=type><a name="Event">
<b>Event
</b></a>
<dd class=data>This field allows the method text of the event handling method
to be edited using
the standard application text editor.


<p>

</dl>
</ul><li>
<dl>
<dt class=type><a name="LoseFocus">
<b><u>L</u>oseFocus
</b></a>
<dd class=data>This page presents the text and properties of the widget method
<b>OnLoseFocus</b>.

<p>This method will be generated and activated,
if text has been defined, 
when the
widget relinquishes the keyboard focus              
to the parent form focus control
mechanisms.
<p>


<p>

</dl>
<img src="vwidget6.gif" usemap="#OnLoseFocus" >
<ul><li>
<dl>
<dt class=type><a name="LoseOptions">
<b>LoseOptions
</b></a>
<dd class=data>This combo selection field offers control in two areas : 
<ol>
<li>
<p>Method Instance
Type : <b>Function</b> or <b>Inline</b>
<p>Inline methods are generated to the source
region of their
activation whilst function methods allow event method invocation
from
within methods of other widgets. 
<li>
<p> Method Focus : <b>Active</b> or <b>Inactive</b>
When
this option is set to active the widget will be included
in the focus control mechanisms
of its parent form.
Otherwise it will be excluded from receiving focus.
</ol>


<p>

</dl>
<li>
<dl>
<dt class=type><a name="LoseFocus">
<b>LoseFocus
</b></a>
<dd class=data>This field allows the method text of the focus release method
to be edited using the
standard application text editor.


<p>

</dl>
</ul><li>
<dl>
<dt class=type><a name="Hide">
<b><u>H</u>ide
</b></a>
<dd class=data>This page presents the text and properties of the widget method
<b>OnHide</b>. 
<p>This
method will be generated and activated,
if text has been defined, 
from the forms
event method of the same name.                  
<p>


<p>

</dl>
<img src="vwidget7.gif" usemap="#OnHidePage" >
<ul><li>
<dl>
<dt class=type><a name="HideOptions">
<b>HideOptions
</b></a>
<dd class=data>This combo selection field offers control of :
<ol>
<li>
<p>Method Instance Type :
<b>Function</b> or <b>Inline</b>
<p>Inline methods are generated to the source region
of their
activation whilst function methods allow event method invocation
from within
methods of other widgets. 
</ol>










<p>

</dl>
<li>
<dl>
<dt class=type><a name="Hide">
<b>Hide
</b></a>
<dd class=data>This field allows the method text of this event method 
to be edited using the standard
application text editor.


<p>

</dl>
</ul><li>
<dl>
<dt class=type><a name="Remove">
<b>Re<u>m</u>ove
</b></a>
<dd class=data>This page presents the text and properties of the widget method
<b>OnRemove</b>. 
<p>This
method will be generated and activated, 
if text has been defined, 
directly before
the outbound parameter transfer mechanisms
and liberation. 
<p>It provides for application
specific preliminaries
of the destruction phase for the widget.
<p>


<p>

</dl>
<img src="vwidget8.gif" usemap="#OnRemove" >
<ul><li>
<dl>
<dt class=type><a name="RemoveOptions">
<b>RemoveOptions
</b></a>
<dd class=data>This combo selection field offers control of :
<ol>
<li>
<p>Method Instance Type :
<b>Function</b> or <b>Inline</b>
<p>Inline methods are generated to the source region
of their
activation whilst function methods allow event method invocation
from within
methods of other widgets. 
</ol>


<p>

</dl>
<li>
<dl>
<dt class=type><a name="Remove">
<b>Remove
</b></a>
<dd class=data>This field allows the method text of the destruction method
to be edited using the
standard application text editor.


<p>

</dl>
</ul></ol>

</td>
</table></div><p>

<p><div align="center">
<table class="CRT">
<tr><th><h3 align="center">
Copyright (c) 2002 Prologue  
</h3>
</table></div><p>
</body></html>
